#!/usr/bin/env groovy

@Library("jenkins-devops-scripts") _

node('slave') {
    def git_utils = new com.beat.utilities.github()
    def project = git_utils.determineRepoName(env.JOB_NAME)
    def slack_channel = "#cx-builds"
    def slack_token = 'XOpkUSxts9Pjq79Jf4SRVU1b'
    def notification_utils = new com.beat.utilities.notifications(slack_token, project, env.BUILD_URL, env.BUILD_NUMBER)
    def committer = git_utils.determineGitCommiter()
    def serviceNameSchemaRegistry = 'cx_invoicing_portal'

    stage('Clone repository') {
        /* Let's make sure we have the repository cloned to our workspace */
        checkout scm

        if (env.BRANCH_NAME == null) {
            echo "No branch found"
            sh "exit 0"
        }

        echo "This is the ${env.BRANCH_NAME} branch"
        branch = env.BRANCH_NAME
    }

    stage('Run CI') {
        try {
            sh "make ci"
            result = 'SUCCESS'
        } catch (e) {
            sh "make cleanup"
            result = 'FAILURE'
            throw e
        } finally {
            def message = "Build <${env.BUILD_URL}console|${env.BUILD_NUMBER}> for <${env.JOB_DISPLAY_URL}|${env.JOB_NAME}> by ${committer}: ${result}"
            notification_utils.slackNotify(result, slack_channel, slack_token, message)
        }
    }
}
